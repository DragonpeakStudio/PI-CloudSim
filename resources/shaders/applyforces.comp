#version 460 core
layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout (binding = 0) writeonly restrict uniform image3D outVelField;

uniform sampler3D inVelField;
uniform sampler3D inqc;
uniform sampler3D inqvAndTemp;



uniform float delta;
uniform float baseTemperature = 300.;
const float GRAVITY = 9.81;
float calcBuoyancy(float qc, float qv, float temp)
{

    float tv = temp*(1+0.61*qv);
    return GRAVITY*((tv/baseTemperature)-(qc));
}

void main()
{
    vec3 res = vec3(gl_WorkGroupSize*gl_NumWorkGroups);
    vec3 pos = (vec3(gl_GlobalInvocationID.xyz)+.5)/res;

    vec4 qc = texture(inqc, pos);
    vec4 qvAndTemp = texture(inqvAndTemp, pos);

    vec3 newForces = vec3(0);
    newForces -= vec3(0,0,1)*calcBuoyancy(qc.x, qvAndTemp.x, qvAndTemp.y)/res.z;

    imageStore(outVelField, ivec3(gl_GlobalInvocationID.xyz), texture(inVelField, pos)+vec4(newForces,0)*delta);

}