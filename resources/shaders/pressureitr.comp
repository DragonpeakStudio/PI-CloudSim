#version 460 core
layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout (binding = 0) writeonly restrict uniform image3D outPressureAndDivergence;


uniform sampler3D inPressureAndDivergence;

uniform float delta;

void main()
{
    vec3 res = vec3(gl_WorkGroupSize*gl_NumWorkGroups);
    vec3 pos = (vec3(gl_GlobalInvocationID.xyz)+.5)/res;
    float p1 = texture(inPressureAndDivergence, vec3(gl_GlobalInvocationID.xyz+vec3(-1,0,0)+.5)/res).x;
    float p2 = texture(inPressureAndDivergence, vec3(gl_GlobalInvocationID.xyz+vec3(1,0,0)+.5)/res).x;
    float p3 = texture(inPressureAndDivergence, vec3(gl_GlobalInvocationID.xyz+vec3(0,-1,0)+.5)/res).x;
    float p4 = texture(inPressureAndDivergence, vec3(gl_GlobalInvocationID.xyz+vec3(0,1,0)+.5)/res).x;
    float p5 = texture(inPressureAndDivergence, vec3(gl_GlobalInvocationID.xyz+vec3(0,0,-1)+.5)/res).x;
    float p6 = texture(inPressureAndDivergence, vec3(gl_GlobalInvocationID.xyz+vec3(0,0,1)+.5)/res).x;
    vec2 current = texture(inPressureAndDivergence, pos).xy;

    float pressure = (current.y+p1+p2+p3+p4+p5+p6)/6.;
    imageStore(outPressureAndDivergence, ivec3(gl_GlobalInvocationID.xyz), vec4(pressure, current.y,0,0));
}