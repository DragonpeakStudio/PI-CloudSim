#version 460 core
layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout (binding = 1, rgba16f) uniform image3D kernal;


#include "lib/rand.slib"
#include "lib/noise.slib"

void main()
{
    ivec3 size = imageSize(kernal);
    vec3 pos = vec3(gl_GlobalInvocationID.xyz)/size;
    pos = abs(pos*2.-1);//TODO better seamless technique
    float densa = fBm(pos, 4);
    float densb = fBm(pos*2.+vec3(12512.41), 4);
    float densc = fBm(pos*4.+vec3(234.13), 4);
    float densd = fBm(pos*8.+vec3(590.63), 4);
    imageStore(kernal, ivec3(gl_GlobalInvocationID.xyz), vec4(densa, densb, densc, densd));
}
