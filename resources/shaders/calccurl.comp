#version 460 core
layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout (binding = 0) writeonly restrict uniform image3D outCurl;

uniform sampler3D inVelocity;

vec3 centralDiff(vec3 pos, ivec3 offset)
{
    return textureOffset(inVelocity, pos, offset).xyz-textureOffset(inVelocity, pos, -offset).xyz;
}

void main()
{
    vec3 res = vec3(gl_WorkGroupSize*gl_NumWorkGroups);
    vec3 pos = (vec3(gl_GlobalInvocationID.xyz)+.5)/res;
    vec3 cDifs[3] = vec3[](centralDiff(pos, ivec3(1,0,0)), centralDiff(pos, ivec3(0,1,0)), centralDiff(pos, ivec3(0,0,1)));
    vec3 w = vec3(0);
    w.x = cDifs[1].z-cDifs[2].y;
    w.y = cDifs[2].x-cDifs[0].z;
    w.z = cDifs[0].y-cDifs[1].x;
    imageStore(outCurl, ivec3(gl_GlobalInvocationID.xyz), vec4(w, 1.));

}